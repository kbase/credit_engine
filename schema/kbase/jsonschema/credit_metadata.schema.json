{
    "$id": "https://github.com/kbase/credit_engine/schema/kbase/linkml",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "metamodel_version": "1.7.0",
    "title": "KBase Credit Metadata Schema",
    "type": "object",
    "version": "0.0.1-commonmeta",
    "$defs": {
        "Contributor": {
            "additionalProperties": false,
            "description": "Represents a contributor to the resource.\n\nContributors must have a 'contributor_type', either 'Person' or 'Organization', and\none of the 'name' fields: either 'given_name' and 'family_name' (for a person), or 'name' (for an organization or a person).\n\nThe 'contributor_role' field takes values from the DataCite and CRediT contributor\nroles vocabularies. For more information on these resources and choosing the\nappropriate roles, please see the following links:\n\nDataCite contributor roles: https://support.datacite.org/docs/datacite-metadata-schema-v44-recommended-and-optional-properties#7a-contributortype\n\nCRediT contributor role taxonomy: https://credit.niso.org",
            "properties": {
                "affiliations": {
                    "description": "List of organizations with which the contributor is affiliated. For contributors that represent an organization, this may be a parent organization (e.g. KBase, US DOE; Arkin lab, LBNL).",
                    "items": {
                        "$ref": "#/$defs/Organization"
                    },
                    "type": "array"
                },
                "contributor_id": {
                    "description": "Persistent unique identifier for the contributor; this might be an ORCID for an individual, or a ROR ID for an organization.",
                    "pattern": "^[a-zA-Z0-9.-_]+:\\S",
                    "type": "string"
                },
                "contributor_roles": {
                    "description": "List of roles played by the contributor when working on the resource.",
                    "items": {
                        "$ref": "#/$defs/ContributorRole"
                    },
                    "type": "array"
                },
                "contributor_type": {
                    "$ref": "#/$defs/ContributorType",
                    "description": "Must be either 'Person' or 'Organization'"
                },
                "family_name": {
                    "description": "The family name(s) of the contributor.",
                    "type": "string"
                },
                "given_name": {
                    "description": "The given name(s) of the contributor.",
                    "type": "string"
                },
                "name": {
                    "description": "Contributor name. For organizations, this should be the full (unabbreviated) name; can also be used for a person if the given name/family name format is not applicable.",
                    "type": "string"
                }
            },
            "required": [
                "contributor_type"
            ],
            "anyOf": [
                {
                    "required": [
                        "name"
                    ]
                },
                {
                    "required": [
                        "family_name",
                        "given_name"
                    ]
                }
            ],
            "title": "Contributor",
            "type": "object"
        },
        "ContributorRole": {
            "description": "The type of contribution made by a contributor",
            "enum": [
                "DataCite:ContactPerson",
                "DataCite:DataCollector",
                "DataCite:DataCurator",
                "DataCite:DataManager",
                "DataCite:Distributor",
                "DataCite:Editor",
                "DataCite:HostingInstitution",
                "DataCite:Producer",
                "DataCite:ProjectLeader",
                "DataCite:ProjectManager",
                "DataCite:ProjectMember",
                "DataCite:RegistrationAgency",
                "DataCite:RegistrationAuthority",
                "DataCite:RelatedPerson",
                "DataCite:Researcher",
                "DataCite:ResearchGroup",
                "DataCite:RightsHolder",
                "DataCite:Sponsor",
                "DataCite:Supervisor",
                "DataCite:WorkPackageLeader",
                "DataCite:Other",
                "CRediT:conceptualization",
                "CRediT:data-curation",
                "CRediT:formal-analysis",
                "CRediT:funding-acquisition",
                "CRediT:investigation",
                "CRediT:methodology",
                "CRediT:project-administration",
                "CRediT:resources",
                "CRediT:software",
                "CRediT:supervision",
                "CRediT:validation",
                "CRediT:visualization",
                "CRediT:writing-original-draft",
                "CRediT:writing-review-editing"
            ],
            "title": "ContributorRole",
            "type": "string"
        },
        "ContributorType": {
            "description": "The type of contributor being represented",
            "enum": [
                "Person",
                "Organization"
            ],
            "title": "ContributorType",
            "type": "string"
        },
        "CreditMetadata": {
            "additionalProperties": false,
            "description": "Represents the credit metadata associated with a workspace object.\n\nIn the following documentation, 'Resource' is used to refer to the workspace object\nthat the CM pertains to.\n\nThe 'resource_type' field should be filled using values from the DataCite\nresourceTypeGeneral field:\n\nhttps://support.datacite.org/docs/datacite-metadata-schema-v44-mandatory-properties#10a-resourcetypegeneral\n\nCurrently the KBase workspace only supports credit metadata for objects of type\n'dataset'; anything else will return an error.\n\nThe license may be supplied either as an URL pointing to licensing information for\nthe resource, or using an SPDX license identifier from the list maintained at https://spdx.org/licenses/.\n\nRequired fields are:\n- identifier\n- resource_type\n- versioning information: if the resource does not have an explicit version number,\none or more dates should be supplied: ideally the date of resource publication and\nthe last update (if applicable).\n- contributors (one or more required)\n- titles (one or more required)\n\nThe resource_type field is required, but as there is currently only a single valid\nvalue, 'dataset', it is automatically populated if no value is supplied.",
            "properties": {
                "comment": {
                    "description": "List of strings of freeform text providing extra information about this credit metadata.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "content_url": {
                    "description": "The URL of the content of the resource.",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    },
                    "type": "array"
                },
                "contributors": {
                    "description": "A list of people and/or organizations who contributed to the resource.",
                    "items": {
                        "$ref": "#/$defs/Contributor"
                    },
                    "type": "array"
                },
                "dates": {
                    "description": "A list of relevant lifecycle events for the resource. Note that these dates apply only to the resource itself, and not to the creation or update of the credit metadata record for the resource.",
                    "items": {
                        "$ref": "#/$defs/EventDate"
                    },
                    "type": "array"
                },
                "descriptions": {
                    "description": "A brief description or abstract for the resource being represented.",
                    "items": {
                        "$ref": "#/$defs/Description"
                    },
                    "type": "array"
                },
                "funding": {
                    "description": "Funding sources for the resource.",
                    "items": {
                        "$ref": "#/$defs/FundingReference"
                    },
                    "type": "array"
                },
                "identifier": {
                    "description": "Resolvable persistent unique identifier for the resource. Should be in the format <database name>:<identifier within database>.",
                    "pattern": "^[a-zA-Z0-9.-_]+:\\S",
                    "type": "string"
                },
                "license": {
                    "$ref": "#/$defs/License",
                    "description": "Usage license for the resource. Use one of the SPDX license identifiers or provide a link to the license text if no SPDX ID is available.\n\nAll data published at KBase is done so under a Creative Commons 0 or Creative Commons 4.0 license.\n"
                },
                "publisher": {
                    "$ref": "#/$defs/Organization",
                    "description": "The publisher of the resource. For a dataset, this is the repository where it is stored."
                },
                "related_identifiers": {
                    "description": "Other resolvable persistent unique IDs related to the resource.",
                    "items": {
                        "$ref": "#/$defs/PermanentID"
                    },
                    "type": "array"
                },
                "resource_type": {
                    "$ref": "#/$defs/ResourceType",
                    "description": "The broad type of the source data for this workspace object. 'dataset' is currently the only valid value for KBase DOIs."
                },
                "titles": {
                    "description": "One or more titles for the resource.",
                    "items": {
                        "$ref": "#/$defs/Title"
                    },
                    "type": "array"
                },
                "url": {
                    "description": "The URL of the resource.",
                    "type": "string",
                    "format": "uri"
                },
                "version": {
                    "description": "The version of the resource. This must be an absolute version, not a relative version like 'latest'.",
                    "type": "string"
                }
            },
            "required": [
                "contributors",
                "identifier",
                "resource_type",
                "titles"
            ],
            "anyOf": [
                {
                    "required": [
                        "version"
                    ]
                },
                {
                    "required": [
                        "dates"
                    ]
                }
            ],
            "title": "CreditMetadata",
            "type": "object"
        },
        "CreditMetadataEntry": {
            "additionalProperties": false,
            "description": "Container for an instance of credit metadata; includes the credit metadata itself and metadata for the credit metadata, including the schema version used, who submitted it, and the date of submission. When the credit metadata for a resource is added or updated, a new CreditMetadataEntry is created to store the information.",
            "properties": {
                "credit_metadata": {
                    "$ref": "#/$defs/CreditMetadata",
                    "description": "The credit metadata itself."
                },
                "credit_metadata_schema_version": {
                    "description": "The version of the credit metadata schema used.",
                    "type": "string"
                },
                "saved_by": {
                    "description": "KBase workspace ID of the user who added this entry.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Unix timestamp for the addition of this set of credit metadata.",
                    "type": "integer"
                }
            },
            "required": [
                "credit_metadata",
                "credit_metadata_schema_version",
                "saved_by",
                "timestamp"
            ],
            "title": "CreditMetadataEntry",
            "type": "object"
        },
        "Description": {
            "additionalProperties": false,
            "description": "Textual information about the resource being represented.",
            "properties": {
                "description_text": {
                    "description": "The text content of the informational element.",
                    "type": "string"
                },
                "description_type": {
                    "$ref": "#/$defs/DescriptionType",
                    "description": "The type of text being represented"
                },
                "language": {
                    "description": "The language in which the description is written, using the appropriate IETF BCP-47 notation.",
                    "type": "string"
                }
            },
            "required": [
                "description_text"
            ],
            "title": "Description",
            "type": "object"
        },
        "DescriptionType": {
            "description": "The type of text being represented",
            "enum": [
                "abstract",
                "description",
                "summary"
            ],
            "title": "DescriptionType",
            "type": "string"
        },
        "EventDate": {
            "additionalProperties": false,
            "description": "Represents an event in the lifecycle of a resource and the date it occurred on.\n\nSee https://support.datacite.org/docs/datacite-metadata-schema-v44-recommended-and-optional-properties#8-date for more information on the events.",
            "properties": {
                "date": {
                    "description": "The date associated with the event. The date may be in the format YYYY, YYYY-MM, or YYYY-MM-DD.",
                    "pattern": "^\\d{4}(-\\d{2}){0,2}$",
                    "type": "string"
                },
                "event": {
                    "$ref": "#/$defs/EventType",
                    "description": "The nature of the resource-related event that occurred on that date."
                }
            },
            "required": [
                "date",
                "event"
            ],
            "title": "EventDate",
            "type": "object"
        },
        "EventType": {
            "description": "The type of date being represented",
            "enum": [
                "accepted",
                "available",
                "copyrighted",
                "collected",
                "created",
                "issued",
                "submitted",
                "updated",
                "valid",
                "withdrawn",
                "other"
            ],
            "title": "EventType",
            "type": "string"
        },
        "FundingReference": {
            "additionalProperties": false,
            "description": "Represents a funding source for a resource, including the funding body and the grant awarded.\n\nThe 'funder_name' field is required; all others are optional.\n\nRecommended resources for organization identifiers include:\n  - Research Organization Registry, http://ror.org\n  - International Standard Name Identifier, https://isni.org\n  - Crossref Funder Registry, https://www.crossref.org/services/funder-registry/ (to be subsumed into ROR)\n\nSome organizations may have a digital object identifier (DOI).",
            "properties": {
                "funder": {
                    "$ref": "#/$defs/Organization",
                    "description": "The funder for the grant or award"
                },
                "grant_id": {
                    "description": "Code for the grant, assigned by the funder",
                    "type": "string"
                },
                "grant_title": {
                    "description": "Title for the grant",
                    "type": "string"
                },
                "grant_url": {
                    "description": "URL for the grant",
                    "pattern": "^https?://\\S",
                    "type": "string",
                    "format": "uri"
                }
            },
            "required": [
                "funder"
            ],
            "title": "FundingReference",
            "type": "object"
        },
        "License": {
            "additionalProperties": false,
            "description": "License information for the resource.",
            "properties": {
                "id": {
                    "description": "String representing the license, from the SPDX license identifiers at https://spdx.org/licenses/.",
                    "type": "string"
                },
                "url": {
                    "description": "URL for the license.",
                    "type": "string",
                    "format": "uri"
                }
            },
            "anyOf": [
                {
                    "required": [
                        "url"
                    ]
                },
                {
                    "required": [
                        "id"
                    ]
                }
            ],
            "title": "License",
            "type": "object"
        },
        "Organization": {
            "additionalProperties": false,
            "description": "Represents an organization.\n\nRecommended resources for organization identifiers and canonical organization names include:\n  - Research Organization Registry, http://ror.org\n  - International Standard Name Identifier, https://isni.org\n  - Crossref Funder Registry, https://www.crossref.org/services/funder-registry/\n\nFor example, the US DOE would be entered as:\n  organization_name: United States Department of Energy\n  organization_id:   ROR:01bj3aw27",
            "properties": {
                "organization_id": {
                    "description": "Persistent unique identifier for the organization in the format <database name>:<identifier within database>",
                    "pattern": "^[a-zA-Z0-9.-_]+:\\S",
                    "type": "string"
                },
                "organization_name": {
                    "description": "Common name of the organization; use the name recommended by ROR if possible.",
                    "type": "string"
                }
            },
            "required": [
                "organization_name"
            ],
            "title": "Organization",
            "type": "object"
        },
        "PermanentID": {
            "additionalProperties": false,
            "description": "Represents a persistent unique identifier for an entity, with an optional relationship to some other entity.\n\nThe 'id' field is required; all other fields are optional.\n\nThe values in the 'relationship_type' field come from controlled vocabularies maintained by DataCite and Crossref. See the documentation links below for more details.\n\nDataCite relation types: https://support.datacite.org/docs/datacite-metadata-schema-v44-recommended-and-optional-properties#12b-relationtype\n\nCrossref relation types: https://www.crossref.org/documentation/schema-library/markup-guide-metadata-segments/relationships/",
            "properties": {
                "description": {
                    "description": "Description of that entity.",
                    "type": "string"
                },
                "id": {
                    "description": "Persistent unique ID for an entity. Should be in the format <database name>:<identifier within database>.",
                    "pattern": "^[a-zA-Z0-9.-_]+:\\S",
                    "type": "string"
                },
                "relationship_type": {
                    "$ref": "#/$defs/RelationshipType",
                    "description": "The relationship between the ID and some other entity.\nFor example, when a PermanentID class is used to represent objects in the CreditMetadata field 'related_identifiers', the 'relationship_type' field captures the relationship between the CreditMetadata and this ID.\n"
                }
            },
            "required": [
                "id",
                "relationship_type"
            ],
            "title": "PermanentID",
            "type": "object"
        },
        "RelationshipType": {
            "description": "The relationship between two entities",
            "enum": [
                "DataCite:Cites",
                "DataCite:Compiles",
                "DataCite:Continues",
                "DataCite:Describes",
                "DataCite:Documents",
                "DataCite:HasMetadata",
                "DataCite:HasPart",
                "DataCite:HasVersion",
                "DataCite:IsCitedBy",
                "DataCite:isCompiledBy",
                "DataCite:IsContinuedBy",
                "DataCite:IsDerivedFrom",
                "DataCite:IsDescribedBy",
                "DataCite:IsDocumentedBy",
                "DataCite:IsIdenticalTo",
                "DataCite:IsMetadataFor",
                "DataCite:IsNewVersionOf",
                "DataCite:IsOriginalFormOf",
                "DataCite:IsPartOf",
                "DataCite:IsPreviousVersionOf",
                "DataCite:IsPublishedIn",
                "DataCite:IsReferencedBy",
                "DataCite:IsRequiredBy",
                "DataCite:IsReviewedBy",
                "DataCite:IsSourceOf",
                "DataCite:IsSupplementTo",
                "DataCite:IsSupplementedBy",
                "DataCite:IsVariantFormOf",
                "DataCite:IsVersionOf",
                "DataCite:Obsoletes",
                "DataCite:References",
                "DataCite:Requires",
                "DataCite:Reviews",
                "Crossref:BasedOnData",
                "Crossref:Finances",
                "Crossref:HasComment",
                "Crossref:HasDerivation",
                "Crossref:HasExpression",
                "Crossref:HasFormat",
                "Crossref:HasManifestation",
                "Crossref:HasManuscript",
                "Crossref:HasPreprint",
                "Crossref:HasRelatedMaterial",
                "Crossref:HasReply",
                "Crossref:HasReview",
                "Crossref:HasTranslation",
                "Crossref:IsBasedOn",
                "Crossref:IsBasisFor",
                "Crossref:IsCommentOn",
                "Crossref:IsDataBasisFor",
                "Crossref:IsExpressionOf",
                "Crossref:IsFinancedBy",
                "Crossref:IsFormatOf",
                "Crossref:IsManifestationOf",
                "Crossref:IsManuscriptOf",
                "Crossref:IsPreprintOf",
                "Crossref:IsRelatedMaterial",
                "Crossref:IsReplacedBy",
                "Crossref:IsReplyTo",
                "Crossref:IsReviewOf",
                "Crossref:IsSameAs",
                "Crossref:IsTranslationOf",
                "Crossref:Replaces",
                "unknown"
            ],
            "title": "RelationshipType",
            "type": "string"
        },
        "ResourceType": {
            "description": "The type of resource being represented.",
            "enum": [
                "dataset"
            ],
            "title": "ResourceType",
            "type": "string"
        },
        "Title": {
            "additionalProperties": false,
            "description": "Represents the title or name of a resource, and the type of that title.\n\nThe 'title' field is required; 'title_type' is only necessary if the text is not the primary title.",
            "properties": {
                "language": {
                    "description": "The language in which the description is written, using the appropriate IETF BCP-47 notation.",
                    "type": "string"
                },
                "title": {
                    "description": "A string used as a title for a resource",
                    "type": "string"
                },
                "title_type": {
                    "$ref": "#/$defs/TitleType",
                    "description": "A descriptor for the title for cases where the contents of the 'title' field is not the primary name or title."
                }
            },
            "required": [
                "title"
            ],
            "title": "Title",
            "type": "object"
        },
        "TitleType": {
            "description": "The type of title being represented.",
            "enum": [
                "subtitle",
                "alternative_title",
                "translated_title",
                "other"
            ],
            "title": "TitleType",
            "type": "string"
        }
    },
    "properties": {
        "credit_metadata_entry": {
            "$ref": "#/$defs/CreditMetadataEntry",
            "description": "A credit metadata entry for a resource."
        }
    },
    "required": [
        "credit_metadata_entry"
    ]
}
