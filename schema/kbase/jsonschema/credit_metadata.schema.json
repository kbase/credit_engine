{
    "$id": "https://github.com/kbase/credit_engine/schema/kbase/linkml",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "metamodel_version": "1.7.0",
    "title": "KBase Credit Metadata Schema",
    "type": "object",
    "version": "0.0.1-commonmeta",
    "$defs": {
        "Contributor": {
            "additionalProperties": false,
            "description": "Represents a contributor to the resource.\n\nContributors must have a 'contributor_type', either 'Person' or 'Organization', and\na 'name'.\n\nThe 'credit_name' field is used to store the name of a person as it would appear in\na citation. If there is no 'credit_name' supplied, the 'name' field would be used\nin citations.\nFor example:\n  name:         Hubert George Wells\n  credit_name:  Wells, HG\n\n  name:         Alexandria Ocasio-Cortez\n  credit_name:  Ocasio-Cortez, A\n\n  name:         Helena Bonham Carter\n  credit_name:  Bonham Carter, H\n\nThe 'contributor_role' field takes values from the DataCite and CRediT contributor\nroles vocabularies. For more information on these resources and choosing the\nappropriate roles, please see the following links:\n\nDataCite contributor roles: https://support.datacite.org/docs/datacite-metadata-schema-v44-recommended-and-optional-properties#7a-contributortype\n\nCRediT contributor role taxonomy: https://credit.niso.org",
            "properties": {
                "affiliations": {
                    "description": "list of organizations with which the contributor is affiliated. For contributors that represent an organization, this may be a parent organization (e.g. KBase, US DOE; Arkin lab, LBNL).",
                    "items": {
                        "$ref": "#/$defs/Organization"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "contributor_id": {
                    "description": "persistent unique identifier for the contributor; this might be an ORCID for an individual, or a ROR ID for an organization.",
                    "pattern": "^[\\w.]+:\\S",
                    "type": "string"
                },
                "contributor_roles": {
                    "description": "list of roles played by the contributor when working on the resource.",
                    "items": {
                        "$ref": "#/$defs/ContributorRole"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "contributor_type": {
                    "$ref": "#/$defs/ContributorType",
                    "description": "must be either 'Person' or 'Organization'"
                },
                "credit_name": {
                    "description": "for a person, how the name should appear in a citation.",
                    "type": "string"
                },
                "name": {
                    "description": "contributor name. For organizations, this should be the full (unabbreviated) name; for a person, the full name should be entered.",
                    "type": "string"
                },
                "given_name": {
                    "description": "the given name(s) of the contributor",
                    "type": "string"
                },
                "family_name": {
                    "description": "the family name of the contributor",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "contributor_type"
            ],
            "title": "Contributor",
            "type": "object"
        },
        "ContributorRole": {
            "description": "The type of contribution made by a contributor",
            "enum": [
                "DataCite:ContactPerson",
                "DataCite:DataCollector",
                "DataCite:DataCurator",
                "DataCite:DataManager",
                "DataCite:Distributor",
                "DataCite:Editor",
                "DataCite:HostingInstitution",
                "DataCite:Producer",
                "DataCite:ProjectLeader",
                "DataCite:ProjectManager",
                "DataCite:ProjectMember",
                "DataCite:RegistrationAgency",
                "DataCite:RegistrationAuthority",
                "DataCite:RelatedPerson",
                "DataCite:Researcher",
                "DataCite:ResearchGroup",
                "DataCite:RightsHolder",
                "DataCite:Sponsor",
                "DataCite:Supervisor",
                "DataCite:WorkPackageLeader",
                "DataCite:Other",
                "CRediT:conceptualization",
                "CRediT:data-curation",
                "CRediT:formal-analysis",
                "CRediT:funding-acquisition",
                "CRediT:investigation",
                "CRediT:methodology",
                "CRediT:project-administration",
                "CRediT:resources",
                "CRediT:software",
                "CRediT:supervision",
                "CRediT:validation",
                "CRediT:visualization",
                "CRediT:writing-original-draft",
                "CRediT:writing-review-editing"
            ],
            "title": "ContributorRole",
            "type": "string"
        },
        "ContributorType": {
            "description": "The type of contributor being represented",
            "enum": [
                "Person",
                "Organization"
            ],
            "title": "ContributorType",
            "type": "string"
        },
        "CreditMetadata": {
            "additionalProperties": false,
            "description": "Represents the credit metadata associated with a workspace object.\n\nIn the following documentation, 'Resource' is used to refer to the workspace object\nthat the CM pertains to.\n\nThe 'resource_type' field should be filled using values from the DataCite\nresourceTypeGeneral field:\n\nhttps://support.datacite.org/docs/datacite-metadata-schema-v44-mandatory-properties#10a-resourcetypegeneral\n\nCurrently the KBase workspace only supports credit metadata for objects of type\n'dataset'; anything else will return an error.\n\nThe license may be supplied either as an URL pointing to licensing information for\nthe resource, or using a license name. See https://choosealicense.com/appendix/ for\na list of common open source licenses.\n\nRequired fields are:\n- identifier\n- versioning information: if the resource does not have an explicit version number,\none or more dates should be supplied: ideally the date of resource publication and\nthe last update (if applicable).\n- contributors (one or more required)\n- titles (one or more required)\n\nThe resource_type field is required, but as there is currently only a single valid\nvalue, 'dataset', it is automatically populated if no value is supplied.",
            "properties": {
                "comment": {
                    "description": "list of strings of freeform text providing extra information about this credit metadata.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "content_url": {
                    "description": "The URL of the content of the resource.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "contributors": {
                    "description": "a list of people and/or organizations who contributed to the resource.",
                    "items": {
                        "$ref": "#/$defs/Contributor"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "dates": {
                    "description": "a list of relevant lifecycle events for the resource.",
                    "items": {
                        "$ref": "#/$defs/EventDate"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "descriptions": {
                    "description": "A brief description or abstract for the resource being represented.",
                    "items": {
                        "$ref": "#/$defs/Description"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "funding": {
                    "description": "funding sources for the resource.",
                    "items": {
                        "$ref": "#/$defs/FundingReference"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "identifier": {
                    "description": "resolvable persistent unique identifier for the resource. Should be in the format <database name>:<identifier within database>.",
                    "pattern": "^[\\w.]+:\\S",
                    "type": "string"
                },
                "language": {
                    "description": "language that textual elements of the resource are in, as a IETF BCP-47 tag.",
                    "type": "string"
                },
                "license": {
                    "description": "usage license for the resource. May be a text string or an URL. Abbreviations should be spelled out where possible (e.g. 'Creative Commons 4.0' instead of 'CC-BY-4.0'). The license is interpreted as an URL and checked for well-formedness if it starts with a series of letters, a colon, and slashes, e.g. \"http://\"; \"https://\"; \"ftp://\".\n\nAll data published at KBase is done so under a Creative Commons 0 or Creative Commons 4.0 license.\n",
                    "items": {
                        "$ref": "#/$defs/License"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "provider": {
                    "description": "The provider of the resource. This can be a DOI registration agency or a repository.",
                    "type": "string",
                    "enum": [
                        "Crossref",
                        "DataCite",
                        "GitHub",
                        "JaLC",
                        "KISTI",
                        "mEDRA",
                        "OP"
                    ]
                },
                "publisher": {
                    "description": "The publisher of the resource.",
                    "type": "object",
                    "items": {
                        "$ref": "#/$defs/Organization"
                    }
                },
                "related_identifiers": {
                    "description": "other resolvable persistent unique IDs related to the resource.",
                    "items": {
                        "$ref": "#/$defs/PermanentID"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "repository": {
                    "$ref": "#/$defs/Organization",
                    "description": "online repository for a dataset."
                },
                "resource_type": {
                    "$ref": "#/$defs/ResourceType",
                    "description": "the broad type of the source data for this workspace object. 'dataset' is the only valid value currently."
                },
                "titles": {
                    "description": "one or more titles for the resource. At least one title of title_type \"title\" must be provided.",
                    "items": {
                        "$ref": "#/$defs/Title"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "url": {
                    "description": "The URL of the resource.",
                    "type": "string",
                    "format": "uri"
                },
                "version": {
                    "description": "the version of the resource. This must be an absolute version, not a relative version like 'latest'.",
                    "type": "string"
                }
            },
            "required": [
                "identifier",
                "resource_type",
                "titles"
            ],
            "oneOf": [
                {
                    "$ref": "#/$defs/CreditMetadata/properties/version"
                },
                {
                    "$ref": "#/$defs/CreditMetadata/properties/dates"
                }
            ],
            "title": "CreditMetadata",
            "type": "object"
        },
        "CreditMetadataEntry": {
            "additionalProperties": false,
            "description": "Container for an instance of credit metadata; includes the credit metadata itself and metadata for the credit metadata.",
            "properties": {
                "credit_metadata": {
                    "$ref": "#/$defs/CreditMetadata",
                    "description": "the credit metadata itself"
                },
                "credit_metadata_schema_version": {
                    "description": "the version of the credit metadata schema used",
                    "type": "string"
                },
                "saved_by": {
                    "description": "KBase workspace ID of the user who added this entry",
                    "type": "string"
                },
                "timestamp": {
                    "description": "unix timestamp for the addition of this set of credit metadata",
                    "type": "integer"
                }
            },
            "required": [
                "credit_metadata",
                "credit_metadata_schema_version",
                "saved_by",
                "timestamp"
            ],
            "title": "CreditMetadataEntry",
            "type": "object"
        },
        "Description": {
            "additionalProperties": false,
            "description": "Textual information about the resource being represented.",
            "properties": {
                "description_text": {
                    "description": "description of the resource",
                    "type": "string"
                },
                "description_type": {
                    "description": "the type of text being represented",
                    "type": "string",
                    "enum": [
                        "abstract",
                        "description",
                        "summary"
                    ]
                }
            }
        },
        "EventDate": {
            "additionalProperties": false,
            "description": "Represents an event in the lifecycle of a resource and the date it occurred on.\n\nSee https://support.datacite.org/docs/datacite-metadata-schema-v44-recommended-and-optional-properties#8-date for more information on the events.",
            "properties": {
                "date": {
                    "description": "the date associated with the event. The date may be in the format YYYY, YYYY-MM, or YYYY-MM-DD.",
                    "pattern": "^\\d{4}(-\\d{2}){0,2}$",
                    "type": "string"
                },
                "event": {
                    "$ref": "#/$defs/EventType",
                    "description": "the nature of the resource-related event that occurred on that date"
                }
            },
            "required": [
                "date",
                "event"
            ],
            "title": "EventDate",
            "type": "object"
        },
        "EventType": {
            "description": "The type of date being represented",
            "enum": [
                "accepted",
                "available",
                "copyrighted",
                "collected",
                "created",
                "issued",
                "submitted",
                "updated",
                "valid",
                "withdrawn",
                "other"
            ],
            "title": "EventType",
            "type": "string"
        },
        "FundingReference": {
            "additionalProperties": false,
            "description": "Represents a funding source for a resource, including the funding body and the grant awarded.\n\nThe 'funder_name' field is required; all others are optional.\n\nRecommended resources for organization identifiers include:\n  - Research Organization Registry, http://ror.org\n  - International Standard Name Identifier, https://isni.org\n  - Crossref Funder Registry, https://www.crossref.org/services/funder-registry/\n\nSome organizations may have a digital object identifier (DOI).",
            "properties": {
                "funder": {
                    "$ref": "#/$defs/Organization",
                    "description": "the funder(s) for the grant or award"
                },
                "grant_id": {
                    "description": "code for the grant, assigned by the funder",
                    "type": "string"
                },
                "grant_title": {
                    "description": "title for the grant",
                    "type": "string"
                },
                "grant_url": {
                    "description": "URL for the grant",
                    "pattern": "^https?:\\S",
                    "type": "string"
                }
            },
            "required": [
                "funder"
            ],
            "title": "FundingReference",
            "type": "object"
        },
        "License": {
            "description": "The license for the resource",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "Organization": {
            "additionalProperties": false,
            "description": "Represents an organization.\n\nRecommended resources for organization identifiers and canonical organization names include:\n  - Research Organization Registry, http://ror.org\n  - International Standard Name Identifier, https://isni.org\n  - Crossref Funder Registry, https://www.crossref.org/services/funder-registry/\n\nFor example, the US DOE would be entered as:\n  organization_name: United States Department of Energy\n  organization_id:   ROR:01bj3aw27",
            "properties": {
                "organization_id": {
                    "description": "persistent unique identifier for the organization in the format <database name>:<identifier within database>",
                    "pattern": "^[\\w.]+:\\S",
                    "type": "string"
                },
                "organization_name": {
                    "description": "common name of the organization; use the name recommended by ROR if possible.",
                    "type": "string"
                }
            },
            "required": [
                "organization_name"
            ],
            "title": "Organization",
            "type": "object"
        },
        "PermanentID": {
            "additionalProperties": false,
            "description": "Represents a persistent unique identifier for an entity, with an optional relationship to some other entity.\n\nThe 'id' field is required; all other fields are optional.\n\nThe values in the 'relationship_type' field come from controlled vocabularies maintained by DataCite and Crossref. See the documentation links below for more details.\n\nDataCite relation types: https://support.datacite.org/docs/datacite-metadata-schema-v44-recommended-and-optional-properties#12b-relationtype\n\nCrossref relation types: https://www.crossref.org/documentation/schema-library/markup-guide-metadata-segments/relationships/",
            "properties": {
                "description": {
                    "description": "description of that entity",
                    "type": "string"
                },
                "id": {
                    "description": "persistent unique ID for an entity. Should be in the format <database name>:<identifier within database>.",
                    "pattern": "^[\\w.]+:\\S",
                    "type": "string"
                },
                "relationship_type": {
                    "$ref": "#/$defs/RelationshipType",
                    "description": "The relationship between the ID and some other entity.\nFor example, when a PermanentID class is used to represent objects in the CreditMetadata field 'related_identifiers', the 'relationship_type' field captures the relationship between the CreditMetadata and this ID.\n"
                }
            },
            "required": [
                "id"
            ],
            "title": "PermanentID",
            "type": "object"
        },
        "RelationshipType": {
            "description": "the relationship between two entities",
            "enum": [
                "DataCite:Cites",
                "DataCite:Compiles",
                "DataCite:Continues",
                "DataCite:Describes",
                "DataCite:Documents",
                "DataCite:HasMetadata",
                "DataCite:HasPart",
                "DataCite:HasVersion",
                "DataCite:IsCitedBy",
                "DataCite:isCompiledBy",
                "DataCite:IsContinuedBy",
                "DataCite:IsDerivedFrom",
                "DataCite:IsDescribedBy",
                "DataCite:IsDocumentedBy",
                "DataCite:IsIdenticalTo",
                "DataCite:IsMetadataFor",
                "DataCite:IsNewVersionOf",
                "DataCite:IsOriginalFormOf",
                "DataCite:IsPartOf",
                "DataCite:IsPreviousVersionOf",
                "DataCite:IsPublishedIn",
                "DataCite:IsReferencedBy",
                "DataCite:IsRequiredBy",
                "DataCite:IsReviewedBy",
                "DataCite:IsSourceOf",
                "DataCite:IsSupplementTo",
                "DataCite:IsSupplementedBy",
                "DataCite:IsVariantFormOf",
                "DataCite:IsVersionOf",
                "DataCite:Obsoletes",
                "DataCite:References",
                "DataCite:Requires",
                "DataCite:Reviews",
                "Crossref:BasedOnData",
                "Crossref:Finances",
                "Crossref:HasComment",
                "Crossref:HasDerivation",
                "Crossref:HasExpression",
                "Crossref:HasFormat",
                "Crossref:HasManifestation",
                "Crossref:HasManuscript",
                "Crossref:HasPreprint",
                "Crossref:HasRelatedMaterial",
                "Crossref:HasReply",
                "Crossref:HasReview",
                "Crossref:HasTranslation",
                "Crossref:IsBasedOn",
                "Crossref:IsBasisFor",
                "Crossref:IsCommentOn",
                "Crossref:IsDataBasisFor",
                "Crossref:IsExpressionOf",
                "Crossref:IsFinancedBy",
                "Crossref:IsFormatOf",
                "Crossref:IsManifestationOf",
                "Crossref:IsManuscriptOf",
                "Crossref:IsPreprintOf",
                "Crossref:IsRelatedMaterial",
                "Crossref:IsReplacedBy",
                "Crossref:IsReplyTo",
                "Crossref:IsReviewOf",
                "Crossref:IsSameAs",
                "Crossref:IsTranslationOf",
                "Crossref:Replaces"
            ],
            "title": "RelationshipType",
            "type": "string"
        },
        "ResourceType": {
            "description": "The type of resource being represented",
            "enum": [
                "dataset"
            ],
            "title": "ResourceType",
            "type": "string"
        },
        "Title": {
            "additionalProperties": false,
            "description": "Represents the title or name of a resource.\n\nThe 'title_string' field is required; if no value is supplied for 'title_type', it\ndefaults to 'title'.\n\nIf the title is in a language other than English, the 'title_type' should be set to\n'translated_title', and the appropriate BCP-47 tag supplied in the 'title_language'\nfield.\n\nNote that the workspace checks that the 'title_language' field adheres to IETF\nBCP-47 syntax rules, but it does not check the validity of the tag.",
            "properties": {
                "title": {
                    "description": "a string used as a title for a resource",
                    "type": "string"
                },
                "title_type": {
                    "$ref": "#/$defs/TitleType",
                    "description": "a descriptor for the title. The default value is 'title'."
                }
            },
            "required": [
                "title",
                "title_type"
            ],
            "title": "Title",
            "type": "object"
        },
        "TitleType": {
            "description": "The type of title being represented",
            "enum": [
                "title",
                "subtitle",
                "alternative_title",
                "translated_title",
                "other"
            ],
            "title": "TitleType",
            "type": "string"
        }
    },
    "properties": {
        "credit_metadata": {
            "$ref": "#/$defs/CreditMetadata",
            "description": "the credit metadata itself"
        },
        "credit_metadata_schema_version": {
            "description": "the version of the credit metadata schema used",
            "type": "string"
        },
        "saved_by": {
            "description": "KBase workspace ID of the user who added this entry",
            "type": "string"
        },
        "timestamp": {
            "description": "unix timestamp for the addition of this set of credit metadata",
            "type": "integer"
        }
    },
    "required": [
        "credit_metadata",
        "credit_metadata_schema_version",
        "saved_by",
        "timestamp"
    ]
}
